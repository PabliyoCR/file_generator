// @each $breakpoint in map-keys($grid-breakpoints) {
//     @include media-breakpoint-up($breakpoint) {
//       $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
//       @each $prop, $abbrev in (width: w, height: h) {
//         @each $size, $length in $sizes {
//           .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
//         }
//       }
//     }
//   }
@use 'sass:math';

@function toVW($inPX: null, $screen: 1920) {
  $inVW: $inPX / $screen * 100;
  $val: #{$inVW}vw;
  @return $val;
}

@function toVH($inPX: null, $screen: 1208) {
  $inVW: $inPX / $screen * 100;
  $val: #{$inVW}vh;
  @return $val;
}

//Convert Pixels to REM using a based of 17px
// to use another base just replace the base. Example toREM(30,18)
@function toREM($inPX: null, $fontbase: 30) {
  $inVW: math.div($inPX, $fontbase);
  $val: #{$inVW}rem;
  @return $val;
}

@function toREMMobile($inPX: null, $fontbase: 20) {
  $inVW: math.div($inPX, $fontbase);
  $val: #{$inVW}rem;
  @return $val;
}

@function toLetterSpacing($inLetterSpacing: null, $inFontSize: null) {
  $val: math.div($inLetterSpacing * $inFontSize, 1000);
  @return toREM($val);
}

@function toLetterSpacingMobile($inLetterSpacing: null, $inFontSize: null) {
  $val: math.div($inLetterSpacing * $inFontSize, 1000);
  @return toREMMobile($val);
}

//svg icon utils
//1) add svg on $icons array and use %%COLOR%% as replacing placeholder
//2) call get-icon
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@function get-icon($icon, $color: #fff) {
  $icon: map-get($icons, $icon);
  $placeholder: "%%COLOR%%";

  $data-uri: str-replace(url($data-svg-prefix + $icon), $placeholder, $color);

  @return str-replace($data-uri, "#", "%23");
}
